<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conx="clr-namespace:Restless.Controls.Chart;assembly=Restless.Charts"
    xmlns:l="clr-namespace:Application.Sample">

    <!-- Converters -->
    <l:DoubleToDateConverter x:Key="DateConverter"/>
    <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>


    <conx:TickVisibility x:Key="TickNone">None</conx:TickVisibility>
    <conx:TickVisibility x:Key="TickMajor">Major</conx:TickVisibility>
    <conx:TickVisibility x:Key="TickMajorMinor">MajorMinor</conx:TickVisibility>
    <conx:TickVisibility x:Key="TickMajorMinorEdge">MajorMinorEdge</conx:TickVisibility>
    <conx:LineChartStyle x:Key="LineStandard">Standard</conx:LineChartStyle>
    <conx:LineChartStyle x:Key="LineCircle">StandardCirclePoint</conx:LineChartStyle>
    <conx:LineChartStyle x:Key="LineSquare">StandardSquarePoint</conx:LineChartStyle>
    <conx:LineChartStyle x:Key="LineFilled">Filled</conx:LineChartStyle>

    <!-- Brushes -->
    <LinearGradientBrush x:Key="HeaderBrush" StartPoint="0.00,0.00" EndPoint="1.00,1.00">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF0060CE" Offset="0.000"/>
                <GradientStop Color="#C000B6FF" Offset="1.000"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline" FontSize="12" Foreground="DarkBlue">
                        <ContentPresenter/>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Defines a style to use for HeaderedContentControl Border elements -->
    <Style TargetType="Border" x:Key="HCCHeaderBorder">
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="1" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Background" Value="{StaticResource HeaderBrush}"/>
    </Style>

    <Style TargetType="Border" x:Key="HCCContentBorder">
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3" />
    </Style>

    <Style TargetType="TextBlock" x:Key="HCCHeaderText">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
    </Style>

    <!-- Default style for HeaderedContentControl -->
    <Style TargetType="HeaderedContentControl">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="False" />
        
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Style="{StaticResource HCCHeaderBorder}">
                        <TextBlock Grid.Column="0" Style="{StaticResource HCCHeaderText}" Text="{TemplateBinding Content}" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <Border Style="{StaticResource HCCContentBorder}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <ContentPresenter DockPanel.Dock="Top"  ContentSource="Header" />
                            <ContentPresenter ContentSource="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- HeaderdContentControl for state items-->
    <Style x:Key="StateHeader" TargetType="HeaderedContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="74"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Foreground="DarkGray" Text="{TemplateBinding Header}"/>
                        <TextBlock Grid.Column="1" Foreground="DarkBlue">
                            <ContentPresenter/>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="2,0,0,2"/>
    </Style>
    
    <!-- HeaderdItemsControl for menu button group -->
    <Style x:Key="MenuButtonGroup" TargetType="HeaderedItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedItemsControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentPresenter Margin="2,0" ContentSource="Header" />
                        
                        <ItemsPresenter Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Style.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="MinWidth" Value="34"/>
                <Setter Property="MinHeight" Value="24"/>
                <Setter Property="Margin" Value="0,0,2,0"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
                
            </Style>
            <Style TargetType="l:DropDownMenuButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                <Setter Property="Foreground" Value="DarkBlue"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="MinWidth" Value="34"/>
                <Setter Property="MinHeight" Value="24"/>
                <Setter Property="Margin" Value="0,0,2,0"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StackPanelSubMenu" TargetType="StackPanel">
        <Setter Property="Margin" Value="15,5"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="4,0"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="DarkGray"/>
            </Style>
            <Style TargetType="Border">
                <Setter Property="Width" Value="1"/>
                <Setter Property="Background" Value="LightGray"/>
                <Setter Property="Margin" Value="4,1"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Margin" Value="8,2"/>
    </Style>
    
</ResourceDictionary>